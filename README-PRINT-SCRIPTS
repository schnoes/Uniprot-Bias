##########################################################################
# README-PRINT-SCRIPTS:
# This readme describes the purpose of all of the separate print scripts
# that have been put together that create various different data outputs
# for the Uniprot-bias paper.
##########################################################################


##########################################################################
# print_ListPapersThatAnnotateMostProts.py
##########################################################################
OUTPUT: allExpPaperInfoTop50-<date>.tsv
This file lists the top X number of papers that annotate the most proteins.
NB: This procedure does NOT double count proteins. The number of proteins
calculated do not contain duplicates.

OUTPUT: all_tt_count.pik
This is a pickle file that counts up all of the term types that were derived
from each paper. This takes a while to calculate (forever if you are off campus)
So code was added so that when it was created, the data would just be pickled,
saving us from unnecessarily recalculating it.

LOG_FILE: LOG_ListPapersThatAnnotateMostProts.log



##########################################################################
# print_ListPapersThatAnnotateMostProtsLO.py
##########################################################################
OUTPUT: allExpPaperLeavesOnlyInfoTop50-<date>.tsv
This file lists the top X number of papers that annotate the most proteins.
NB: This procedure does NOT double count proteins. The number of proteins
calculated do not contain duplicates.This script uses the 'leaves only' pickle
instead of the pickle that contains all the data

OUTPUT: all_tt_countLO.pik
This is a pickle file that counts up all of the term types that were derived
from each paper. This takes a while to calculate (forever if you are off campus)
So code was added so that when it was created, the data would just be pickled,
saving us from unnecessarily recalculating it.

LOG_FILE: LOG_ListPapersThatAnnotateMostProtsLO.log




